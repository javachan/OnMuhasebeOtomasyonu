/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gui;

import java.awt.Component;
import java.io.File;
import java.io.IOException;
import java.sql.SQLException;
import java.time.LocalDate;
import java.time.format.DateTimeFormatter;
import java.util.ArrayList;
import java.util.List;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javafx.stage.FileChooser;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.RowSorter;
import javax.swing.SortOrder;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import javax.swing.table.TableRowSorter;

/**
 *
 * @author ozkan
 */
public class KasaListele extends javax.swing.JFrame {

    /**
     * Creates new form KasaListele
     */
    public KasaListele() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jFileChooser1 = new javax.swing.JFileChooser();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jButton3 = new javax.swing.JButton();
        jComboBox1 = new javax.swing.JComboBox<>();
        jComboBox2 = new javax.swing.JComboBox<>();
        jRadioButton2 = new javax.swing.JRadioButton();
        jLabel1 = new javax.swing.JLabel();
        jComboBox3 = new javax.swing.JComboBox<>();
        jRadioButton1 = new javax.swing.JRadioButton();
        jRadioButton3 = new javax.swing.JRadioButton();
        jCheckBox1 = new javax.swing.JCheckBox();
        jCheckBox2 = new javax.swing.JCheckBox();

        jFileChooser1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jFileChooser1ActionPerformed(evt);
            }
        });

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                formComponentShown(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "İşlem Türü", "No", "Tutar", "Tarih", "Müşteri Adı", "Açıklama"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTable1);

        jButton1.setText("YAZDIR");
        jButton1.setEnabled(false);

        jButton2.setText("Excell'e Aktar");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Filtreler", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Calibri", 1, 18))); // NOI18N

        jButton3.setBackground(new java.awt.Color(51, 204, 0));
        jButton3.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N
        jButton3.setText("UYGULA");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "AY", "OCAK", "ŞUBAT", "MART", "NİSAN", "MAYIS", "HAZİRAN", "TEMMUZ", "AĞUSTOS", "EYLÜL", "EKİM", "KASIM", "ARALIK" }));

        jComboBox2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Yıl", "Item 2", "Item 3", "Item 4" }));

        jRadioButton2.setText("Çıkış");
        jRadioButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton2ActionPerformed(evt);
            }
        });

        jLabel1.setText("/");

        jComboBox3.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "İşlem Türü Seçiniz", "Nakit İşlemleri", "Çek İşlemleri", "Senet İşlemleri", "Döviz İşlemleri", " " }));

        jRadioButton1.setText("Giriş");
        jRadioButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton1ActionPerformed(evt);
            }
        });

        jRadioButton3.setText("Giriş/Çıkıs");
        jRadioButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton3ActionPerformed(evt);
            }
        });

        jCheckBox1.setText("Tarih");
        jCheckBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox1ActionPerformed(evt);
            }
        });

        jCheckBox2.setText("Türüne Göre");
        jCheckBox2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jRadioButton1)
                        .addGap(28, 28, 28)
                        .addComponent(jRadioButton2)
                        .addGap(18, 18, 18)
                        .addComponent(jRadioButton3)
                        .addGap(105, 105, 105)
                        .addComponent(jButton3))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jCheckBox1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(93, 93, 93)
                        .addComponent(jCheckBox2)
                        .addGap(18, 18, 18)
                        .addComponent(jComboBox3, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(174, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1)
                    .addComponent(jComboBox3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jCheckBox1)
                    .addComponent(jCheckBox2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jRadioButton1)
                    .addComponent(jRadioButton2)
                    .addComponent(jRadioButton3)
                    .addComponent(jButton3))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane1)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton2)
                .addGap(82, 82, 82))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton1)
                            .addComponent(jButton2))))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 479, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
          DateTimeFormatter dtf = DateTimeFormatter.ofPattern("dd/MM/yyyy");
    LocalDate localDate = LocalDate.now();
    private void jRadioButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton1ActionPerformed
        // TODO add your handling code here:
        jRadioButton3.setSelected(false);
        jRadioButton2.setSelected(false);
        DefaultTableModel kasatablo = (DefaultTableModel) jTable1.getModel();
        kasatablo.getDataVector().clear();
        
        kasatablo.setRowCount(0);
        List<codes.KasaListe> kasalist2 = null;
        
        
        try {
            kasalist2= new codes.KasaListe().KasaGiren();
        } catch (SQLException ex) {
            Logger.getLogger(KasaListele.class.getName()).log(Level.SEVERE, null, ex);
        }
       
        
        System.out.println(kasalist2.size());
        Vector[] v = new Vector[kasalist2.size()];
        for(int n=0;n<kasalist2.size();n++){
            v[n] = new Vector();
            String sirketAdi = null;
            v[n].add(kasalist2.get(n).getGenelTur());
            v[n].add(kasalist2.get(n).getGenelNo());
            v[n].add(kasalist2.get(n).getGenelTutar());
            v[n].add(kasalist2.get(n).getGenelTarih());
            try {
                sirketAdi = new codes.sirketler().sirketAdiAl(kasalist2.get(n).getGenelKurumNo());
            } catch (SQLException ex) {
                Logger.getLogger(KasaListele.class.getName()).log(Level.SEVERE, null, ex);
            }
            v[n].add(sirketAdi);
            v[n].add(kasalist2.get(n).getGenelAciklama());
            kasatablo.insertRow(n, v[n]);
            
        }
        jTable1.setModel(kasatablo);
        
         /*
         JTable table = new JTable(kasatablo);
         TableRowSorter<TableModel> sorter = new TableRowSorter<TableModel>(jTable1.getModel());
         table.setRowSorter(sorter);
         List<RowSorter.SortKey> sortKeys = new ArrayList<>();
         sortKeys.add(new RowSorter.SortKey(3, SortOrder.DESCENDING));
         sorter.setSortKeys(sortKeys);
         jTable1.setRowSorter(sorter);*/
         jTable1.repaint();
       //  kasatablo.setRowCount(0);
         
    }//GEN-LAST:event_jRadioButton1ActionPerformed

    private void jRadioButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton2ActionPerformed
        // TODO add your handling code here:
        jRadioButton1.setSelected(false);
        jRadioButton3.setSelected(false);
        DefaultTableModel kasatablog = (DefaultTableModel) jTable1.getModel();
        kasatablog.getDataVector().clear();
        kasatablog.setRowCount(0);
        List<codes.KasaListe> kasalist1 = null;
        
        codes.KasaListe ks = new codes.KasaListe();
        try {
            kasalist1 = ks.KasaCikan();
        } catch (SQLException ex) {
            Logger.getLogger(KasaListele.class.getName()).log(Level.SEVERE, null, ex);
        }
        System.out.println(kasalist1.size());
        
       
          if(kasalist1.size()>0){
            Vector[] v1 = new Vector[kasalist1.size()];
              System.out.println(v1.length);
            for(int n=0;n<v1.length;n++){
            v1[n] = new Vector();
            String sirketAdi = null;
            v1[n].add(kasalist1.get(n).getGenelCikanTur());
            v1[n].add(kasalist1.get(n).getGenelCikanNo());
            v1[n].add(kasalist1.get(n).getGenelCikanTutar());
            v1[n].add(kasalist1.get(n).getGenelCikanTarih());
            String kurum_no = kasalist1.get(n).getGenelCikanKurumNo();
            try {
                sirketAdi = new codes.sirketler().sirketAdiAl(kurum_no);
            } catch (SQLException ex) {
                Logger.getLogger(KasaListele.class.getName()).log(Level.SEVERE, null, ex);
            }
            v1[n].add(sirketAdi);
            v1[n].add(kasalist1.get(n).getGenelCikanAciklama());
            kasatablog.insertRow(n, v1[n]);
            
        }
        
         /*JTable table = new JTable(kasatablo);
         TableRowSorter<TableModel> sorter = new TableRowSorter<TableModel>(jTable1.getModel());
         table.setRowSorter(sorter);

         List<RowSorter.SortKey> sortKeys = new ArrayList<>();
         sortKeys.add(new RowSorter.SortKey(3, SortOrder.DESCENDING));
         sorter.setSortKeys(sortKeys);
         kasatablo.getDataVector().clear();
         jTable1.setRowSorter(sorter);
         jTable1.repaint();
          }*/
          //jTable1.setModel(kasatablo);
         
          }
          
          jTable1.setModel(kasatablog);
           jTable1.repaint();
           
    }//GEN-LAST:event_jRadioButton2ActionPerformed

    private void jRadioButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton3ActionPerformed
        // TODO add your handling code here:
        
        jRadioButton1.setSelected(false);
        jRadioButton2.setSelected(false);
        tumunuListele();
    }//GEN-LAST:event_jRadioButton3ActionPerformed
    public void tumunuListele(){
        //////////COMBOBOXLARA TARİHLERİN ALINMASI///////
         DefaultComboBoxModel combo = new DefaultComboBoxModel();
            combo.addElement("YIL SEÇİNİZ");
            for(int i=localDate.getYear();i>=1995;i--){
                combo.addElement(i);
            }
            jComboBox2.setModel(combo);
            jComboBox2.repaint();
            jComboBox1.setSelectedIndex(localDate.getMonthValue());
            jComboBox2.setSelectedItem(localDate.getYear());
            jComboBox1.setEnabled(false);
            jComboBox2.setEnabled(false);
            jComboBox3.setEnabled(false);
        /////////////////////////////////////////////////////////////    
         DefaultTableModel kasatablog = (DefaultTableModel) jTable1.getModel();
        kasatablog.getDataVector().clear();
        kasatablog.setRowCount(0);
        List<codes.KasaListe> kasalist1 = null;
        List<codes.KasaListe> kasalistGiren = null;
        System.out.println("hey");
        codes.KasaListe ks = new codes.KasaListe();
        try {
            kasalist1 = ks.KasaCikan();
        } catch (SQLException ex) {
            Logger.getLogger(KasaListele.class.getName()).log(Level.SEVERE, null, ex);
        }
        System.out.println(kasalist1.size());
        
       
          if(kasalist1.size()>0){
            Vector[] v1 = new Vector[kasalist1.size()];
            System.out.println(v1.length);
            for(int n=0;n<v1.length;n++){
            v1[n] = new Vector();
            String sirketAdi = null;
            v1[n].add(kasalist1.get(n).getGenelCikanTur());
            v1[n].add(kasalist1.get(n).getGenelCikanNo());
            v1[n].add(kasalist1.get(n).getGenelCikanTutar());
            v1[n].add(kasalist1.get(n).getGenelCikanTarih());
            String kurum_no = kasalist1.get(n).getGenelCikanKurumNo();
            try {
                sirketAdi = new codes.sirketler().sirketAdiAl(kurum_no);
            } catch (SQLException ex) {
                Logger.getLogger(KasaListele.class.getName()).log(Level.SEVERE, null, ex);
            }
            v1[n].add(sirketAdi);
            v1[n].add(kasalist1.get(n).getGenelCikanAciklama());
            kasatablog.insertRow(n, v1[n]);
            
        }
       
          } try {
            kasalistGiren= new codes.KasaListe().KasaGiren();
        } catch (SQLException ex) {
            Logger.getLogger(KasaListele.class.getName()).log(Level.SEVERE, null, ex);
        }
          if(kasalistGiren.size()>0){
               Vector[] v1 = new Vector[kasalistGiren.size()];
        for(int n=0;n<kasalistGiren.size();n++){
            v1[n] = new Vector();
            String sirketAdi = null;
            v1[n].add(kasalistGiren.get(n).getGenelTur());
            v1[n].add(kasalistGiren.get(n).getGenelNo());
            v1[n].add(kasalistGiren.get(n).getGenelTutar());
            v1[n].add(kasalistGiren.get(n).getGenelTarih());
            try {
                sirketAdi = new codes.sirketler().sirketAdiAl(kasalistGiren.get(n).getGenelKurumNo());
            } catch (SQLException ex) {
                Logger.getLogger(KasaListele.class.getName()).log(Level.SEVERE, null, ex);
            }
            v1[n].add(sirketAdi);
            v1[n].add(kasalistGiren.get(n).getGenelAciklama());
            kasatablog.insertRow(n, v1[n]);
            
        }
          }
          
          jTable1.setModel(kasatablog);
           jTable1.repaint();
    }
    void tarihliListele(String yil, int ay){
         DefaultTableModel kasatablog = (DefaultTableModel) jTable1.getModel();
        kasatablog.getDataVector().clear();
        kasatablog.setRowCount(0);
        List<codes.KasaListe> kasalist1 = null;
        List<codes.KasaListe> kasalistGiren = null;
        System.out.println("hey");
        codes.KasaListe ks = new codes.KasaListe();
        try {
            kasalist1 = ks.KasaCikanTarihli(yil, ay);
        } catch (SQLException ex) {
            Logger.getLogger(KasaListele.class.getName()).log(Level.SEVERE, null, ex);
        }
        System.out.println(kasalist1.size());
        
       
          if(kasalist1.size()>0){
            Vector[] v1 = new Vector[kasalist1.size()];
            System.out.println(v1.length);
            for(int n=0;n<v1.length;n++){
            v1[n] = new Vector();
            String sirketAdi = null;
            v1[n].add(kasalist1.get(n).getGenelCikanTur());
            v1[n].add(kasalist1.get(n).getGenelCikanNo());
            v1[n].add(kasalist1.get(n).getGenelCikanTutar());
            v1[n].add(kasalist1.get(n).getGenelCikanTarih());
            String kurum_no = kasalist1.get(n).getGenelCikanKurumNo();
            try {
                sirketAdi = new codes.sirketler().sirketAdiAl(kurum_no);
            } catch (SQLException ex) {
                Logger.getLogger(KasaListele.class.getName()).log(Level.SEVERE, null, ex);
            }
            v1[n].add(sirketAdi);
            v1[n].add(kasalist1.get(n).getGenelCikanAciklama());
            kasatablog.insertRow(n, v1[n]);
            
        }
       
          } try {
            kasalistGiren= new codes.KasaListe().KasaGirenTarihli(yil, ay);
        } catch (SQLException ex) {
            Logger.getLogger(KasaListele.class.getName()).log(Level.SEVERE, null, ex);
        }
          if(kasalistGiren.size()>0){
               Vector[] v1 = new Vector[kasalistGiren.size()];
        for(int n=0;n<kasalistGiren.size();n++){
            v1[n] = new Vector();
            String sirketAdi = null;
            v1[n].add(kasalistGiren.get(n).getGenelTur());
            v1[n].add(kasalistGiren.get(n).getGenelNo());
            v1[n].add(kasalistGiren.get(n).getGenelTutar());
            v1[n].add(kasalistGiren.get(n).getGenelTarih());
            try {
                sirketAdi = new codes.sirketler().sirketAdiAl(kasalistGiren.get(n).getGenelKurumNo());
            } catch (SQLException ex) {
                Logger.getLogger(KasaListele.class.getName()).log(Level.SEVERE, null, ex);
            }
            v1[n].add(sirketAdi);
            v1[n].add(kasalistGiren.get(n).getGenelAciklama());
            kasatablog.insertRow(n, v1[n]);
            
        }
          }
          
          jTable1.setModel(kasatablog);
           jTable1.repaint();
    }
    void TuruneGoreListele(int tur){
        DefaultTableModel kasatablog = (DefaultTableModel) jTable1.getModel();
        kasatablog.getDataVector().clear();
        kasatablog.setRowCount(0);
        List<codes.KasaListe> kasalist1 = null;
        List<codes.KasaListe> kasalistGiren = null;
        System.out.println("hey");
        codes.KasaListe ks = new codes.KasaListe();
        try {
            kasalist1 = ks.KasaCikanTurunaGore(tur);
        } catch (SQLException ex) {
            Logger.getLogger(KasaListele.class.getName()).log(Level.SEVERE, null, ex);
        }
        System.out.println(kasalist1.size());
        
       
          if(kasalist1.size()>0){
            Vector[] v1 = new Vector[kasalist1.size()];
            System.out.println(v1.length);
            for(int n=0;n<v1.length;n++){
            v1[n] = new Vector();
            String sirketAdi = null;
            v1[n].add(kasalist1.get(n).getGenelCikanTur());
            v1[n].add(kasalist1.get(n).getGenelCikanNo());
            v1[n].add(kasalist1.get(n).getGenelCikanTutar());
            v1[n].add(kasalist1.get(n).getGenelCikanTarih());
            String kurum_no = kasalist1.get(n).getGenelCikanKurumNo();
            try {
                sirketAdi = new codes.sirketler().sirketAdiAl(kurum_no);
            } catch (SQLException ex) {
                Logger.getLogger(KasaListele.class.getName()).log(Level.SEVERE, null, ex);
            }
            v1[n].add(sirketAdi);
            v1[n].add(kasalist1.get(n).getGenelCikanAciklama());
            kasatablog.insertRow(n, v1[n]);
            
        }
       
          } try {
            kasalistGiren= new codes.KasaListe().KasaGirenTuruneGore(tur);
        } catch (SQLException ex) {
            Logger.getLogger(KasaListele.class.getName()).log(Level.SEVERE, null, ex);
        }
          if(kasalistGiren.size()>0){
               Vector[] v1 = new Vector[kasalistGiren.size()];
        for(int n=0;n<kasalistGiren.size();n++){
            v1[n] = new Vector();
            String sirketAdi = null;
            v1[n].add(kasalistGiren.get(n).getGenelTur());
            v1[n].add(kasalistGiren.get(n).getGenelNo());
            v1[n].add(kasalistGiren.get(n).getGenelTutar());
            v1[n].add(kasalistGiren.get(n).getGenelTarih());
            try {
                sirketAdi = new codes.sirketler().sirketAdiAl(kasalistGiren.get(n).getGenelKurumNo());
            } catch (SQLException ex) {
                Logger.getLogger(KasaListele.class.getName()).log(Level.SEVERE, null, ex);
            }
            v1[n].add(sirketAdi);
            v1[n].add(kasalistGiren.get(n).getGenelAciklama());
            kasatablog.insertRow(n, v1[n]);
            
        }
          }
          
          jTable1.setModel(kasatablog);
           jTable1.repaint();
    }
    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        if(!jCheckBox1.isSelected() && jCheckBox2.isSelected()){
           int sayi = jComboBox3.getSelectedIndex()-1;
            TuruneGoreListele(sayi);
        }else if(jCheckBox1.isSelected() && !jCheckBox2.isSelected()){
            String yil = ""; int ay = 0;
        if(jComboBox1.getSelectedIndex()>0 && jComboBox2.getSelectedIndex()>0){
            ay = jComboBox1.getSelectedIndex();
            yil = jComboBox2.getSelectedItem().toString(); 
        }
        tarihliListele(yil, ay);
        }
   
        
       
        
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        int returnVal = jFileChooser1.showOpenDialog(this);
         jFileChooser1.setFileSelectionMode(JFileChooser.FILES_ONLY);
            if (returnVal == JFileChooser.APPROVE_OPTION) {
            File file = (File) jFileChooser1.getSelectedFile().getAbsoluteFile();
            codes.sirketler ex= new codes.sirketler();
           // File file =new File("C:\\Users\\ozkan\\Desktop\\bankalar.xlsx");
                System.out.println(file);
            
             try {
                 ex.exportTable(jTable1, file);
                 //}      
             } catch (IOException ex1) {
                 Logger.getLogger(KasaListele.class.getName()).log(Level.SEVERE, null, ex1);
         
             }
            }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jFileChooser1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jFileChooser1ActionPerformed
        // TODO add your handling code here:
         
    }//GEN-LAST:event_jFileChooser1ActionPerformed

    private void formComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_formComponentShown
        // TODO add your handling code here:
        tumunuListele();
    }//GEN-LAST:event_formComponentShown

    private void jCheckBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox1ActionPerformed
        // TODO add your handling code here:
        if(jCheckBox1.isSelected()){
            jComboBox1.setEnabled(true);
            jComboBox2.setEnabled(true);
        }else{
              jComboBox1.setEnabled(false);
            jComboBox2.setEnabled(false); 
        }
    }//GEN-LAST:event_jCheckBox1ActionPerformed

    private void jCheckBox2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox2ActionPerformed
        // TODO add your handling code here:
        if(jCheckBox2.isSelected()){
            jComboBox3.setEnabled(true);
        }
        else
            jComboBox3.setEnabled(false);
    }//GEN-LAST:event_jCheckBox2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(KasaListele.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(KasaListele.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(KasaListele.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(KasaListele.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new KasaListele().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JCheckBox jCheckBox2;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JComboBox<String> jComboBox2;
    private javax.swing.JComboBox<String> jComboBox3;
    private javax.swing.JFileChooser jFileChooser1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JRadioButton jRadioButton1;
    private javax.swing.JRadioButton jRadioButton2;
    private javax.swing.JRadioButton jRadioButton3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
}
